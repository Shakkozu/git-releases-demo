name: Release Drafter

on:
  push:
    branches:
      - release/**
  pull_request:
    branches:
      - release/**

permissions:
  contents: read

jobs:
  draft-release:
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract branch name and version
        run: |
          # Sprawdź, czy workflow jest uruchomiony w kontekście PR
          if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
            # Jeśli to PR, to podstawowy branch to target PR (base branch)
            BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
            echo "PR target branch (base branch): $BASE_BRANCH"
          else
            # W przeciwnym razie bierz branch, na którym są zmiany
            BASE_BRANCH="${GITHUB_REF#refs/heads/}"
            echo "Branch: $BASE_BRANCH"
          fi

          # Wyciągnij wersję z nazwy gałęzi w formacie release/XYZ
          if [[ "$BASE_BRANCH" =~ ^release/(.+)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "Extracted version from branch: $VERSION"
          else
            echo "Branch name does not match expected format 'release/*'"
            exit 0
          fi

          echo "version=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"

      - name: Generate release notes
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter-config.yml
          # version: ${{ steps.extract_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
